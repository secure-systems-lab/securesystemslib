[build-system]
# Dependabot cannot do `build-system.requires` (dependabot/dependabot-core#8465)
# workaround to get reproducibility and auto-updates:
#   PIP_CONSTRAINT=requirements/build.txt python3 -m build ...
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "securesystemslib"
authors = [{name = "https://www.updateframework.com", email = "theupdateframework@googlegroups.com"}]
license = {text = "MIT"}
description = "A library that provides cryptographic and general-purpose routines for Secure Systems Lab projects at NYU"
readme = "README.md"
keywords = [
    "cryptography",
    "keys",
    "signatures",
    "rsa",
    "ed25519",
    "ecdsa",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Security",
    "Topic :: Software Development",
]
requires-python = "~=3.8"
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/secure-systems-lab/securesystemslib"
Source = "https://github.com/secure-systems-lab/securesystemslib"
Issues = "https://github.com/secure-systems-lab/securesystemslib/issues"

[project.optional-dependencies]
crypto = ["cryptography>=40.0.0"]
gcpkms = ["google-cloud-kms", "cryptography>=40.0.0"]
azurekms = ["azure-identity", "azure-keyvault-keys", "cryptography>=40.0.0"]
awskms = ["boto3", "botocore", "cryptography>=40.0.0"]
hsm = ["asn1crypto", "cryptography>=40.0.0", "PyKCS11"]
PySPX = ["PySPX>=0.5.0"]
sigstore = ["sigstore~=3.0"]
vault = ["hvac", "cryptography>=40.0.0"]

[tool.hatch.version]
path = "securesystemslib/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
  "/tests",
  "/securesystemslib",
  "/requirements*.txt",
  "/tox.ini",
  "/mypy.ini",
  "/CHANGELOG.md",
  "/.coveragerc",
]

# Ruff section
[tool.ruff]
lint.select = [
  "E",      # ruff default
  "F",      # ruff default
  "I",      # isort: all
  "PL",     # pylint: all
  "UP",     # pyupgrade: all
  "S",      # flake8-bandit: all
  "N",      # pep8-naming: all
  "RUF100"  # ruff: find unused noqa
]
exclude = ["_vendor"]

indent-width = 4

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S",      # bandit: Not running bandit on tests
    "E501"    # line-too-long
]