name: Run Securesystemslib tests

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

permissions: {}

jobs:
  build:
    strategy:
      fail-fast: false
      # Run tests on each OS/Python combination
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, macos-latest, windows-latest]
        toxenv: [py]

        include:
          - python-version: "3.11"
            os: ubuntu-latest
            toxenv: purepy311
          - python-version: "3.11"
            os: ubuntu-latest
            toxenv: py311-no-gpg
          - python-version: "3.11"
            os: ubuntu-latest
            toxenv: py311-test-gpg-fails
          - python-version: "3.11"
            os: ubuntu-latest
            toxenv: lint

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout securesystemslib
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: "requirements*.txt"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade tox

      - name:  Install system dependencies
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get install -y softhsm2
            echo "PYKCS11LIB=/usr/lib/softhsm/libsofthsm2.so" >> $GITHUB_ENV

          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install softhsm
            echo "PYKCS11LIB=$(brew --prefix softhsm)/lib/softhsm/libsofthsm2.so" >> $GITHUB_ENV

          elif [ "$RUNNER_OS" == "Windows" ]; then
            choco install softhsm.install
            echo "PYKCS11LIB=C:\SoftHSM2\lib\softhsm2-x64.dll" >> $GITHUB_ENV

          else
              echo "$RUNNER_OS not supported"
              exit 1
          fi

      - name: Run tox
        run: tox -e ${{ matrix.toxenv }}
